#!/usr/bin/env ./node_modules/.bin/babel-node
import * as http from 'http';
import connect from 'connect';
import findFreePort from 'find-free-port';
import opener from 'opener';
import request from 'request';
import webpack from 'webpack';
import webpackDevMiddleware from 'webpack-dev-middleware';
import webpackHotMiddleware from 'webpack-hot-middleware';

import * as webpackConfig from '../config/webpack/index.babel';

const compiler = webpack(webpackConfig);

function startServer(port) {
  const app = connect();
  const url = `http://localhost:${port}`;

  app.use(webpackDevMiddleware(compiler, {
    noInfo: true,
    stats: {
      colors: true,
    },
  }));

  app.use(webpackHotMiddleware(compiler));

  app.use((_req, res) => {
    request(url).pipe(res);
  });

  http.createServer(app).listen(port, error => {
    if (error) {
      process.stderr.write(error);
      process.stderr.write('\n');
      process.exit(1);
    }

    // Ensure that the bundle builds before we attempt to open the page.
    request(url, (requestError, response) => {
      if (requestError) throw requestError;
      if (response.statusCode !== 200) {
        throw new Error(`Invalid webpack bundle`);
      }
      process.stdout.write(`Dev server listening at ${url}\n`);
      opener(url);
    });
  });
}

const envPort = parseInt(process.env.PORT);
if (envPort > 0) {
  startServer(envPort);
} else {
  findFreePort(3000, (error, port) => {
    if (error) throw error;
    startServer(port);
  });
}
